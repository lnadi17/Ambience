#!/bin/sh

# After each commit on master (GitHub), it will switch to the Heroku branch and fast-forward to master. Then, switch back to master.
# This makes the committing flow seamless so all you have to do is push (which is safer done manually than with a hook)

ERR='[ERR] '
SUCCESS='[SUCCESS] '
WARN='[WARN] '
space="\n\n\n"

branch=`git branch | grep \* | cut -d ' ' -f2`
heroku="heroku" # private branch
github="master" # public branch

if [ "$branch" = $github ]
then
    echo $space
    
    echo "${WARN}Executing post-commit script (cherry-pick)..."
    # commitID=`git rev-parse HEAD`
    
    if git checkout $heroku; then
        if git merge master --ff-only; then
            echo "${SUCCESS}Fast-forwarded $heroku to $gtihub branch $space"
            if ! git checkout $github; then
                echo "${ERR}Couldn't checkout to $github $space"
                exit 1
            fi
        else
            echo "${ERR}Failed to fast-forward $heroku to $github. Do it manually $space"
            exit 1
        fi
    else
        echo "${ERR}Couldn't checkout to $heroku $space"
        exit 1
    fi
    
fi

exit 0
